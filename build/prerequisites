#!/bin/bash

#
# This file contains the scripts for checking that the host system meets the
# minimum prerequisites for building Wander
#
# The minimum prerequisites are:
#  * Bash-3.2 (/bin/sh should be a symbolic or hard link to bash) 
#  * Binutils-2.25 (Versions greater than 2.31.1 are not recommended as they have not been tested)
#  * Bison-2.7 (/usr/bin/yacc should be a link to bison or small script that executes bison)
#  * Bzip2-1.0.4
#  * Coreutils-6.9
#  * Diffutils-2.8.1
#  * Findutils-4.2.31
#  * Gawk-4.0.1 (/usr/bin/awk should be a link to gawk)
#  * GCC-4.9 including the C++ compiler, g++ (Versions greater than 8.2.0 are not recommended as they have not been tested)
#  * Glibc-2.11 (Versions greater than 2.28 are not recommended as they have not been tested)
#  * Grep-2.5.1a
#  * Gzip-1.3.12
#  * Linux Kernel-3.2 
#  * M4-1.4.10
#  * Make-4.0
#  * Patch-2.5.4
#  * Perl-5.8.8
#  * Sed-4.1.5
#  * Tar-1.22
#  * Texinfo-4.7
#  * Xz-5.0.0
#
# @author the_DJDJ
# @since  8.3-systemd
#

# Show a nice welcome message
echo -e "$(COLOUR_COMBINE $COLOUR_SET_BOLD $COLOUR_FOREGROUND_GREY_LIGHT)Checking for prerequisites:$COLOUR_RESET"


# Prepare the testing
export LC_ALL=C
success=0


# And do the testing
source build/dependencies/bash      ; success=$(($success | $result))
source build/dependencies/binutils  ; success=$(($success | $result))
source build/dependencies/bison     ; success=$(($success | $result))
source build/dependencies/bzip2     ; success=$(($success | $result))
source build/dependencies/coreutils ; success=$(($success | $result))
source build/dependencies/diffutils ; success=$(($success | $result))
source build/dependencies/findutils ; success=$(($success | $result))
source build/dependencies/gawk      ; success=$(($success | $result))
source build/dependencies/gcc       ; success=$(($success | $result))
source build/dependencies/g++       ; success=$(($success | $result))
source build/dependencies/glibc     ; success=$(($success | $result))
source build/dependencies/grep      ; success=$(($success | $result))

# Output results
if [ $success -eq 0 ]; then
	status="${COLOUR_FOREGROUND_GREEN}passed"
else
	status="${COLOUR_FOREGROUND_RED}failed"
fi

echo -e "Prerequisites test $status${COLOUR_RESET}."


# And cleanup
unset LC_ALL
return $success
