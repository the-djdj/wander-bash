#!/bin/bash

#
# This file contains the scripts for building Glibc in the temporary system
#
# The package being built is:
#  * Glibc-2.28
#
# @author the_DJDJ
# @since  8.3-systemd
#

# Set results
status="${COLOUR_FOREGROUND_RED}Glibc-2.28 failed."
result=0



filename="glibc-2.28.tar.xz"
location="http://ftp.gnu.org/gnu/glibc/"
checksum="c81d2388896379997bc359d4f2084239"



# The instructions before the package is configured
preconfigure () {
	mkdir -v build
	cd       build
}



# The instructions for configuring the package
configure () {
	../configure                           \
      --prefix=/tools                    \
      --host=$WANDER_TGT                 \
      --build=$(../scripts/config.guess) \
      --enable-kernel=3.2                \
      --with-headers=/tools/include      \
      libc_cv_forced_unwind=yes          \
      libc_cv_c_cleanup=yes
}



# The instructions for compiling the package
compile() {
	make
}



# The instructions after the package is configured
postconfigure() {
	:
}



# The instructions to install the package
install () {
	make install
}



print_heading () {
	echo -n " * Glibc                                   "
}

print_heading

# Do the package things
if [ $build_temp_glibc = "yes" ] ; then

	# Download the file
	echo -e -n "${COLOUR_FOREGROUND_MAGENTA}downloading"
	getfile $location $filename $checksum
	echo -e -n $LINE_UP ; print_heading

	# Unpack the archive
	echo -e -n "${COLOUR_FOREGROUND_MAGENTA}unpacking"
	decompress $filename
	change_directory $filename
	echo -e -n $LINE_UP ; print_heading

	# Set timer
	SECONDS=0

	# Preconfigure
	echo -e -n "${COLOUR_FOREGROUND_MAGENTA}preconfiguring"
    preconfigure &> $directory/logs/temp/$filename/preconfigure.log
	echo -e -n $LINE_UP ; print_heading

	# Configure
	echo -e -n "${COLOUR_FOREGROUND_MAGENTA}configuring"
	configure &> $directory/logs/temp/$filename/configure.log
	echo -e -n $LINE_UP ; print_heading

	# Compile
	echo -e -n "${COLOUR_FOREGROUND_MAGENTA}compiling"
	compile &> $directory/logs/temp/$filename/compile.log
	echo -e -n $LINE_UP ; print_heading

	# Postconfigure
	echo -e -n "${COLOUR_FOREGROUND_MAGENTA}postconfiguring"
	postconfigure &> $directory/logs/temp/$filename/postconfigure.log
	echo -e -n $LINE_UP ; print_heading

	# Install
    echo -e -n "${COLOUR_FOREGROUND_MAGENTA}installing"
	install &> $directory/logs/temp/$filename/install.log
    echo -e -n $LINE_UP ; print_heading

	# Go back to the sources directory
	cd $WANDER/sources

	# Cleanup
	echo -e -n "${COLOUR_FOREGROUND_MAGENTA}cleaning up"
	cleanup $filename
	echo -e -n $LINE_UP ; print_heading

	duration=$SECONDS
	status="${COLOUR_FOREGROUND_GREEN}ok              ${COLOUR_RESET}($((duration / 3600))h $(((duration / 60) - (duration / 3600 * 60)))m $(($duration % 60))s)"
else
	status="${COLOUR_FOREGROUND_BLUE}skipped"
fi

unset filename
unset location
unset checksum

echo -e $status $COLOUR_RESET
return $result
